
spring.profiles.active=prod
server.port=${SERVER_PORT}

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${PG_HOST}:${PG_PORT}/${PG_DATABASE}?currentSchema=${PG_SCHEMA:public}
spring.datasource.username=${PG_USERNAME}
spring.datasource.password=${PG_PASSWORD}

#File config
file.serverPath=${FILE_SERVER_PATH}
file.clientPath=${FILE_CLIENT_PATH}
file.url=${FILE_SERVER_URL}
file.download.url=${FILE_DOWNLOAD_URL}
frontend.url=${FRONTEND_BASE_URL}
frontend.verifyUrl=${FRONTEND_VERIFY_PATH}
frontend.newPasswordUrl=${FRONTEND_RESET_PASSWORD_PATH}

spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${MAX_FILE_REQUEST_SIZE}

# Mail Configuration
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_STARTTLS_ENABLE}
spring.mail.properties.mail.smtp.auth=${MAIL_STARTTLS_AUTH}
spring.mail.properties.mail.smtp.starttls.required=${MAIL_STARTTLS_REQUIRED}

# JWT refresh tokens
access-token.private=${ACCESS_TOKEN_PRIVATE_KEY}
access-token.public=${ACCESS_TOKEN_PUBLIC_KEY}
refresh-token.private=${REFRESH_TOKEN_PRIVATE_KEY}
refresh-token.public=${REFRESH_TOKEN_PUBLIC_KEY}

# swagger-ui-html
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true

spring.jpa.hibernate.ddl-auto=update
#update create create-drop validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.showSql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=${PG_SCHEMA:public}

# Name.com
name.com.api.url=${DOMAIN_API_URL}
name.com.api.token=${DOMAIN_API_TOKEN}
name.com.api.ip.host=${DOMAIN_API_IP_HOST_DEFAULT}

# OneSignal
onesignal.app-id=${ONESIGNAL_APP_ID}
onesignal.rest-api-key=${ONESIGNAL_API_KEY}

# Telegram
notifications.telegram.bot.token=${TELEGRAM_BOT_TOKEN}
notifications.telegram.bot.id=${TELEGRAM_BOT_ID}
notifications.telegram.bot.username=${TELEGRAM_BOT_USERNAME}
notifications.telegram.chatId=${TELEGRAM_CHAT_ID}

# Nexus Repository
nexus.url=${NEXUS_URL}
nexus.username=${NEXUS_USERNAME}
nexus.token=${NEXUS_API_TOKEN}
nexus.registryName=${NEXUS_REGISTRY_NAME}

# Gitlab-ce
git.apiUrl=${GITLAB_URL}
git.token=${GITLAB_TOKEN}
git.jenkins.pipeline.repoId=${GIT_JENKINS_PIPELINE_REPO_ID}
git.jenkins.pipeline.branch=${GIT_JENKINS_PIPELINE_BRANCH}

# jenkins API
jenkins.rest.endpoint=${JENKINS_ENDPOINT}
jenkins.rest.username=${JENKINS_USERNAME}
jenkins.rest.password=${JENKINS_PASSWORD}
jenkins.rest.token=${JENKINS_TOKEN}
jenkins.git.credentialsId=${JENKINS_GIT_CREDENTIAL_ID}
jenkins.nexus.credentialId=${JENKINS_NEXUS_CREDENTIAL_ID}
jenkins.agent.label=${JENKINS_AGENT_LABEL}
jenkins.job_template_frontend=${JENKINS_JOB_TEMPLATE_FRONTEND}
jenkins.job_template_backend=${JENKINS_JOB_TEMPLATE_BACKEND}
jenkins.shareLibraries.client.source=${JENKINS_LIBRARIES_CLIENT_SOURCE}
jenkins.shareLibraries.client.branch=${JENKINS_LIBRARIES_CLIENT_BRANCH}
jenkins.shareLibraries.client.credentialsId=${JENKINS_LIBRARIES_CLIENT_CREDENTIAL_ID}
jenkins.sharedLibraries=${JENKINS_SHARED_LIBRARIES}

# trivy scanner
trivy.report.path=${TRIVY_REPORT_PATH}
trivy.report.url=${TRIVY_REPORT_URL}
trivy.report.json.path=${TRIVY_REPORT_JSON_PATH}

# Cloud
cloud.base.api.url=${CLOUD_BASE_API_URL}

# Sonarqube
sonarqube.url=${SONARQUBE_URL}
sonarqube.token=${SONARQUBE_TOKEN}
